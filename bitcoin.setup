# IkiWiki::Setup::Yaml - YAML formatted setup file
#
# Setup file for ikiwiki.
# 
# Passing this to ikiwiki --setup will make ikiwiki generate
# wrappers and build the wiki.
# 
# Remember to re-run ikiwiki --setup any time you edit this file.
#
# name of the wiki
wikiname: bitcoin
# contact email for wiki
adminemail:
# users who are wiki admins
adminuser:
- tomz
# users who are banned from the wiki
banned_users: []
# where the source of the wiki is located
srcdir: pages
# where to build the wiki
destdir: ../wiki-html
# base url to the wiki
url: http://wiki.example.com/
# url to the ikiwiki.cgi
cgiurl: http://wiki.example.com/ikiwiki.cgi
# do not adjust cgiurl if CGI is accessed via different URL
reverse_proxy: 0
# filename of cgi wrapper to generate
# cgi_wrapper: ../wiki-html/ikiwiki.cgi
# mode for cgi_wrapper (can safely be made suid)
cgi_wrappermode: 06755
# number of seconds to delay CGI requests when overloaded
cgi_overload_delay: ''
# message to display when overloaded (may contain html)
cgi_overload_message: 'Slow down!'
# enable optimization of only refreshing committed changes?
only_committed_changes: 0
# rcs backend to use
rcs: git
# plugins to add to the default configuration
add_plugins:
- parentlinks
- typography
# html
- pagetemplate
- autoindex
- highlight
- rawhtml
- embed
# goodstuff; this contains;
# brokenlinks
- img
- map
# more
- orphans
- pagecount
- pagestats
# progress
- shortcut
- tag
- table
- template
- toc
- toggle
# repolist
- htmlbalance
#- localstyle
- headinganchors



disable_plugins:
- otl
- smiley
- websetup
- templatebody # broken;
- sidebar
- sandbox
- openid
- editpage
- recentchanges
- recentchangesdiff
# lockedit
# signinedit
- pingee
# link



# display verbose messages?
verbose: 0
# log to syslog?
syslog: 0
# create output files named page/index.html?
usedirs: 1
# use '!'-prefixed preprocessor directives?
# prefix_directives: 1
# use page/index.mdwn source files
indexpages: 1
# enable Discussion pages?
discussion: 1
# name of Discussion pages
discussionpage: Talk
# generate HTML5?
html5: 1
# only send cookies over SSL connections?
sslcookie: 0
# extension to use for new pages
#default_pageext: mdwn
# extension to use for html files
#htmlext: html
# strftime format string to display date
timeformat: '%c'
# UTF-8 locale to use
locale: en_US.UTF-8
# put user pages below specified page
userdir: users/
# how many backlinks to show before hiding excess (0 to show all)
numbacklinks: 10
# attempt to hardlink source files? (optimisation for large files)
#hardlink: 1
# force ikiwiki to use a particular umask (keywords public, group or private, or a number)
#umask: public
# group for wrappers to run in
#wrappergroup: ikiwiki
# extra library and plugin directory
# environment variables
#ENV: ''
# time zone name
timezone: Europe/Central
# regexp of normally excluded files to include
#include: ^\.htaccess$
# regexp of files that should be skipped
#exclude: ^(*\.private|Makefile)$
# specifies the characters that are allowed in source filenames
wiki_file_chars: -[:alnum:]+/.(\ )?!,%&:_
# allow symlinks in the path leading to the srcdir (potentially insecure)
allow_symlinks_before_srcdir: 1

######################################################################
# core plugins
#   (editpage, git, htmlscrubber, inline, link, meta, parentlinks,
#    templatebody)
######################################################################

# git plugin
# git hook to generate
# shell command for git_wrapper to run, in the background
#git_wrapper_background_command: git push github
# mode for git_wrapper (can safely be made suid)
#git_wrappermode: 06755
# git pre-receive hook to generate
#git_test_receive_wrapper: /git/wiki.git/hooks/pre-receive
# unix users whose commits should be checked by the pre-receive hook
#untrusted_committers: []
# gitweb url to show file history ([[file]] substituted)
#historyurl: http://git.example.com/gitweb.cgi?p=wiki.git;a=history;f=[[file]];hb=HEAD
# gitweb url to show a diff ([[file]], [[sha1_to]], [[sha1_from]], [[sha1_commit]], and [[sha1_parent]] substituted)
#diffurl: http://git.example.com/gitweb.cgi?p=wiki.git;a=blobdiff;f=[[file]];h=[[sha1_to]];hp=[[sha1_from]];hb=[[sha1_commit]];hpb=[[sha1_parent]]
# where to pull and push changes (set to empty string to disable)
gitorigin_branch: origin
# branch that the wiki is stored in
gitmaster_branch: master

# inline plugin
# enable rss feeds by default?
rss: 0
# enable atom feeds by default?
atom: 0


######################################################################
# auth plugins
#   (anonok, blogspam, httpauth, lockedit, moderatedcomments,
#    opendiscussion, openid, passwordauth, signinedit)
######################################################################

# anonok plugin
# PageSpec to limit which pages anonymous users can edit
#anonok_pagespec: '*/discussion'

# blogspam plugin
# PageSpec of pages to check for spam
#blogspam_pagespec: postcomment(*)
# options to send to blogspam server
#blogspam_options: blacklist=1.2.3.4,blacklist=8.7.6.5,max-links=10
# blogspam server JSON url
#blogspam_server: ''

# httpauth plugin
# url to redirect to when authentication is needed
#cgiauthurl: http://example.com/wiki/auth/ikiwiki.cgi
# PageSpec of pages where only httpauth will be used for authentication
#httpauth_pagespec: '!*/Discussion'

# lockedit plugin
# PageSpec controlling which pages are locked
#locked_pages: '!*/Discussion'

# moderatedcomments plugin
# PageSpec matching users or comment locations to moderate
#moderate_pagespec: '*'

# openid plugin
# url pattern of openid realm (default is cgiurl)
# openid_realm: ''
# url to ikiwiki cgi to use for openid authentication (default is cgiurl)
#openid_cgiurl: ''

# passwordauth plugin
# a password that must be entered when signing up for an account
# account_creation_password: s3cr1t
# cost of generating a password using Authen::Passphrase::BlowfishCrypt
#password_cost: 8

# highlight plugin
# types of source files to syntax highlight
#tohighlight: .c .h .cpp .pl .py Makefile:make
# location of highlight's filetypes.conf
filetypes_conf: /etc/highlight/filetypes.conf
# location of highlight's langDefs directory
langdefdir: /usr/share/highlight/langDefs

# mdwn plugin
# enable multimarkdown features?
multimarkdown: 0
# disable use of markdown discount?
nodiscount: 0

# search plugin
# path to the omega cgi program
omega_cgi: /usr/lib/cgi-bin/omega/omega
# use google site search rather than internal xapian index?
google_search: 0

# theme plugin
# name of theme to enable
#theme: actiontabs

# tag plugin
# parent page tags are located under
tagbase: tags
# autocreate new tag pages?
tag_autocreate: 1
# commit autocreated tag pages
tag_autocreate_commit: 'autotags'
