Double-spending is the result of successfully spending some money more than once.  Bitcoin protects against double spending by verifying each transaction added to the [[block_chain]] to ensure that the inputs for the transaction had not previously already been spent.

Other electronic systems prevent double-spending by having a master authoritative source that follows business rules for authorizing each transaction.  Bitcoin uses a decentralized system, where a consensus among nodes following the same protocol is substituted for a central authority.  

Bitcoin has some exposure to fraudulent double-spending when a transaction is first made, with less and less risk as a transaction gains [[confirmations|confirmation]].

##Attack vectors

###Race attack

Traders and merchants who accept a payment immediately on seeing "0/unconfirmed" are exposed to a double-spend occurring, if there was a fraudulent attempt that successfully communicated one transaction to the merchant yet communicated a different transaction that spends the same coin that was first to eventually make it into the block chain.

Merchants can take precautions (e.g., disable incoming connections, only connect to well connected nodes) to lessen the risk of a race attack but the risk cannot be eliminated.  Therefore, the cost/benefit of the risk needs to be considered when accepting payment on 0/unconfirmed when there is no recourse against the attacker.

The [[research]] paper [Two Bitcoins at the Price of One](http://eprint.iacr.org/2012/248.pdf) finds that the protocol allows a high degree of success by an attacker in performing race attacks.  The method studied in the research paper depends on access to the merchant's Bitcoin node which is why that even prior to this paper, recommendations for merchants include disabling incoming connections and to choose specific outgoing connections (3.1).

###Finney attack

Another attack the trader or merchant is exposed to when accepting payment on 0/unconfirmed.  The Finney attack is a fraudulent double-spend that requires the participation of a miner once a block has been mined (4.1).  The risk of a Finney attack cannot be eliminated regardless of the precautions taken by the merchant, but the participation of a miner is required and a specific sequence of events must occur.  Thus the attack is not trivial nor inexpensive to perform and only makes sense for the attacker when the gains from the attack are significant.  Just like with the race attack, a trader or merchant should consider the cost / benefit when accepting payment on just one confirmation when there is no recourse against the attacker.

###Vector76 attack

Also referred to as a one-confirmation attack, is a combination of the race attack and the Finney attack such that a transaction that even has one confirmation can still be double-spent.  The same protective action for the race attack (no incoming connections, explicit outgoing connection to a well-connected node) significantly reduces the risk of this occurring.

It is worth noting that a successful attack costs the attacker one block - they need to 'sacrifice' a block by not broadcasting it, and instead relaying it only to the attacked node.

See on [BitcoinTalk](http://bitcointalk.org/index.php?topic=36788.msg463391#msg463391) or further [example of an attack scenario](http://www.reddit.com/r/Bitcoin/comments/2e7bfa/vector76_double_spend_attack/cjwya6x).

###Brute force attack

This attack has a chance to work even if the merchant waits for some confirmations, but requires relatively high hashrate.

The attacker submits to the merchant/network a transaction which pays the merchant, while privately mining a blockchain fork in which a double-spending transaction is included instead. After waiting for *n* confirmations, the merchant sends the product. If the attacker happened to find more than *n* blocks at this point, he releases his fork and regains his coins; otherwise, he can try to continue extending his fork with the hope of being able to catch up with the network. If he never manages to do this, the attack fails and the payment to the merchant will go through.

The probability of success is a function of the attacker's hashrate (as a proportion of the total network hashrate) and the number of confirmations the merchant waits for. For example, if the attacker controls 10% of the network hashrate but the merchant waits for 6 confirmations, the success probability is on the order of 0.1% (6.1).

###>50% attack

Also referred to as a [[majority_attack]] If the attacker controls more than half of the network hashrate, the previous attack has a probability of 100% to succeed. Since the attacker can generate blocks faster than the rest of the network, he can simply persevere with his private fork until it becomes longer than the branch built by the honest network, from whatever disadvantage.

No amount of confirmations can prevent this attack; however, waiting for confirmations does increase the aggregate resource cost of performing the attack, which could make it unprofitable or delay it long enough for the circumstances to change or slower-acting synchronization methods to kick in.

##Risk management

There are third-party services to assist traders and merchants to help manage the risk or to insure against losses.

##See Also

* [[Weaknesses]]
* [Bitcoin Attacks in Plain English](http://codinginmysleep.com/bitcoin-attacks-in-plain-english) by David Perry

[[de:Doppelausgaben]]

##References

3.1: [BitcoinTalk Thread - Two Bitcoins at the Price of One](http://bitcointalk.org/index.php?topic=79090.msg881283#msg881283)  
4.1: [Best practice for fast transaction acceptance - how high is the risk?](http://www.bitcointalk.org/index.php?topic=3441.msg48384#msg48384)  
6.1: [Analysis of hashrate-based double-spending](https://bitcoil.co.il/Doublespend.pdf)


[[!tag "Technical"]]
