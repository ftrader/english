##Introduction

Unless you are using a [[hardware_wallet]] it is strongly recommended to read this page.

Wallet security can be broken down into two independent goals:

1. Protecting your wallet against loss.
1. Protecting your wallet against theft.

In the case that your current wallet hasn't been protected adequately (e.g. put online with a weaker password):

1. Making a new secure wallet, using appropriate long-term protection.

*For a brief overview see also: [[Wallet Security Dos and Don'ts|Wallet_Security_Dos_and_Donts]]*

##Paper Wallets
Main page: [[Paper_wallet]]

[[Paper_wallet]]s can be used to store bitcoins offline in non-digital format. Using securely generated paper wallets significantly decreases the chances of your bitcoins being stolen by hackers or computer viruses.
Fundamentally, a paper wallet is merely a physical record of a HD wallet private seed.

## Hardware wallets
[[Hardware_wallet]]s are a major step to enhanced security and usability.

See the [[Hardware_wallet]]s page for more information on which hardware wallet solutions are currently available.

##Importance of security updates

No software is perfect, and from time to time there may be security vulnerabilities found in your Bitcoin client as well.
Be sure you keep your client updated with the latest bug fixes, especially when a new vulnerability is discovered.
We maintain a [[list a known vulnerabilities|CVEs]] on this wiki - you can watch that page to get updates.
Note that you *don't* need to be running the latest major client version: some clients, including the popular Bitcoin-Qt, have older versions available with bugfix-only updates.

##Securing the Bitcoin-Qt or bitcoind wallet

Bitcoin transactions send Bitcoins to a specific public key. A Bitcoin address is an encoded hash of a public key. In order to use received Bitcoins, you need to have the private key matching the public key you received with. This is sort of like a super long password associated with an account (the account is the public key). Your Bitcoin wallet contains all of the private keys necessary for spending your received transactions. If you delete your wallet without a backup, then you no longer have the authorization information necessary to claim your coins, and the coins associated with those keys are lost forever.

The wallet contains a pool of queued keys. By default there are 100 keys in the [[key_pool]].  The size of the pool is configurable using the "-keypool" command line argument.  When you need an address for whatever reason (send, “new address”, generation, etc.), the key is not actually generated freshly, but taken from this pool. A brand new address is generated to fill the pool back to 100. So when a backup is first created, it has all of your old keys plus 100 unused keys. After sending a transaction, it has 99 unused keys. After a total of 100 new-key actions, you will start using keys that are not in your backup. Since the backup does not have the private keys necessary for authorizing spends of these coins, restoring from the old backup will cause you to lose Bitcoins.

Creating a new address generates a new pair of public and private keys, which are added to your wallet. Each keypair is mostly random numbers, so they cannot be known prior to generation. If you backup your wallet and then create more than 100 new addresses, the keypair associated with the newest addresses will not be in the old wallet because the new keypairs are only known after creating them. Any coins received at these addresses will be lost if you restore from the backup.

The situation is made somewhat more confusing because the receiving addresses shown in the UI are not the only keys in your wallet. Each Bitcoin generation is given a new public key, and, more importantly, each sent transaction also sends some number of Bitcoins back to yourself at a new key. When sending Bitcoins to anyone, you generate a new keypair for yourself and simultaneously send Bitcoins to your new public key and the actual recipient's public key. This is an anonymity feature – it makes tracking Bitcoin transactions much more difficult.

So if you create a backup, and then do more than 100 things that cause a new key to be used, and then restore from the backup, some Bitcoins will be lost. Bitcoin has not deleted any keys (keys are never deleted) – it has created a new key that is not in your old backup and then sent Bitcoins to it. A backup is therefore recommended roughly every 50 transactions (or address creations) just to be safe.

## Making a new Bitcoin-Qt or bitcoind wallet

If a wallet or an encrypted wallet's password has been compromised, it is wise to create a new wallet and transfer the full balance of bitcoins to addresses contained only in the newly created wallet. Examples of ways a wallet may be compromised are through password re-use, minimal strength passwords, computer hack or virus attack.

There are a number of ways to create a new wallet with Bitcoin-QT or bitcoind but this is a process that has been tested with bitcoind 0.6.3. We use the copy command to minimize the chance of any data loss but you are warned to make backups of any wallet.dat that holds a balance for you.

> 1. Shut down the Bitcoin program.
> 2. Find and make a backup of the "compromised" wallet.dat file and rename it, perhaps adding a short description:
> wallet.dat ->  wallet-compromised.dat
> Depending on your OS, the wallet file will be located at:
> Windows: %APPDATA%\Bitcoin\
> Linux: ~/.bitcoin/
> Mac: ~/Library/Application Support/Bitcoin/
> 3. Start the Bitcoin program and it will create a new wallet.dat. You may then encrypt the wallet as desired and make a new backup.
> 4. Once you've made a new wallet, you can obtain one or more addresses and copy them into a text editor. After obtaining the new address(es), shut down the Bitcoin program, make a backup of the new wallet.dat file and copy it to a new file named wallet-new.dat.
> 5. Copy the wallet-compromised.dat file back to wallet.dat, start the Bitcoin program and transfer your balance to the new address(es) you put in your text editor. Once the balance is back to 0 for your compromised wallet, you may want to wait a couple minutes or for a confirmation or check block explorer to be sure the transactions have been broadcasted. Then you may shut down the Bitcoin program.
> 6. Rename wallet.dat to wallet-compromised.dat. 
> 7. Rename wallet-new.dat to wallet.dat.

You should now have a new wallet with all the bitcoins from the old wallet.

##Making a secure workspace

Unless you are using a [[hardware_wallet]], you must take care that the system is free of malware, viruses, keyloggers, remote access tools, and other tools that may be used to make remote copies of your wallet, Bitcoin-related passwords, or Bitcoin private keys. When your computer is compromised, the precautions taken below may provide additional protection.

A [[hardware_wallet]] typically holds the private keys on its internal storage that is not accessible by any malware. The device signs the transactions internally and only transmits the signed transactions to the computer. The separation of the private keys from the vulnerable environment allows the user to spend bitcoins on a compromised computer without any risk. 


###Debian-based Linux

#### Store all into an encrypted folder (Tomb)

Tomb is a simple tool to manage encrypted storage on GNU/Linux. Among its features are bind-hooks to set up a tomb's contents in the place where other programs expect them, for example in our case mount -o bind the .bitcoin directory in a user's home.

First install tomb from https://files.dyne.org/tomb (homepage is on http://www.dyne.org/software/tomb)

Among the requirements: zsh, cryptsetup, pinentry-curses, gnupg, sudo.

Recommended: wipe, dcfldd, steghide, qrencode.

Then create a tomb (we name it bitcoin) with three commands:

<code>tomb dig -s 100 bitcoin.tomb</code>

<code>tomb forge bitcoin.tomb.key</code>

<code>tomb lock  bitcoin.tomb -k bitcoin.tomb.key</code>

Then open it

<code>tomb open bitcoin.tomb</code>

This will require you to input again the password you selected.

Once open the tomb contents are in /media/bitcoin.tomb

Move there your bitcoin wallet:

<code>mv ~/.bitcoin /media/bitcoin.tomb/my-safe-wallet</code>

Then create a file "/media/bitcoin.tomb/bind-hooks" and put a single line:

<code>my-safe-wallet    .bitcoin</code>

Which means that every time the tomb is open, the directory my-safe-wallet needs to be bound to ~/.bitcoin. Just make sure an empty ~/.bitcoin directory exists in your home.

Now close the tomb and store its keys safely, make sure you memorize the password. Have a look at Tomb's documentation, there is a number of things you can do like steganography or printing out keys on a paper to hide and such.

That's it. Every time you like to access your wallet open the tomb and the .bitcoin will be in place. One can also store the bitcoin binary inside the tomb and even start the bitcoin client using the exec-hooks. Tomb's manual page "man tomb" explains the possibilities.

The advantage of this approach over an encrypted home is that it becomes extremely portable across computers and even online shells: a Tomb is just a file and its key can be stored far away, on different shells, usb sticks or mobile phones.




#### Secure the whole user home directory
The first step is to make a [new user](http://www.howtogeek.com/howto/ubuntu/add-a-user-on-ubuntu-server/). In order for that new user to have an encrypted home directory, you'll first need the encryption utility. Run:

<code>sudo apt-get install ecryptfs-utils</code>

Now you're ready to create a new user

<code>sudo adduser --encrypt-home new_user_name</code>

You'll need to come up with a [[secure|#Choosing_A_Strong_Password]] new password for that user.

When you get to the prompt 'Enter the new value, or press ENTER for the default', just keep hitting ENTER.

Then switch user to the new user.  To get to the new user you can use the switch user icon for your system, which on Ubuntu is in the 'System/Quit' screen, or if there is no switch icon on your system you can log out and log back in as the new user.

Since the home folder of this user is encrypted, if you're not logged in as that user, data that is saved there can't be browsed, even by a root user. If something goes wrong with your system, and you need to decrypt the new user's files, you'll need its decryption key.

<code>ecryptfs-unwrap-passphrase</code>

It will ask you for your user's password and give you the decryption key. **WRITE DOWN OR SAVE THE CODE IT RETURNS** because you will need it if you ever have to pull your data off while the OS is not working. (You can run it again later if you need to, but run it now so that you can get your data if your Linux install gets botched.)

The encrypted folder data is not encrypted while it's in memory, and so if it's ever sent to the swap partition it can be stolen from there unless that too is encrypted - be aware that this will mean you cannot use Hibernate anymore, as the bootloader won't be able to restore the hibernation data.

<code>ecryptfs-setup-swap</code>

Then click on a folder in the new user to display the file browser, then keep going up folders until you see the new user home directory, then right click to bring up the Properties dialog, then click on the Permissions tab, then in the Others section, set the folder access to None.

For secure browsing, open Firefox, and then go into the Edit menu and click Preferences.  Starting from the left, click on the General tab, and in the 'Startup/When Firefox starts' pop up menu, choose 'Show a Blank Page'.  Then click on the Content tab, and deselect 'Load images automatically' and deselect 'Enable JavaScript'.  Then click on the Privacy tab, and in the 'History/Firefox will' pop up menu, choose 'Never remember history'.  Then click on the Security tab, and in the Passwords section, deselect 'Remember passwords for sites' and deselect 'Use a master password'.  Then click on the Advanced tab, then click on the Update tab, and then in the 'Automatically check for updates to' section, deselect 'Add-ons' and 'Search Engines'.

When JavaScript is disabled, the [Linux download page](http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.23/bitcoin-0.3.23-linux.tar.gz/download) will not download automatically, so you'll have to click on the 'direct link' part of the "Problems with the download? Please use this 'direct link' or try another mirror." line.

###Mac
This solution **does not scale**; the amount of needed space can grow beyond the image size.

###Windows

Due to the frequency with which Windows computers are compromised, it is advised to encrypt your wallet or to keep your wallet on an encrypted disk image created by third-party software, such as [TrueCrypt](http://www.truecrypt.org/) (open source) or [Jetico BestCrypt](http://www.jetico.com/encryption-bestcrypt/) (commercial). This also applies to the storage of passwords, private keys and other data that can be used to access any of your Bitcoin balances.

Assuming that you have installed the Windows Bitcoin client and run it at least once, the process is described below.

<p><b>To mount the Bitcoin data directory on an encrypted drive</b></p>
<ol start=1 type=1>
<li>Use the third-party disk image encryption program of your choice to create and mount an encrypted disk image of at least 5GB in size. This procedure stores the entire block chain database with the wallet.dat file so the required size of the encrypted disk image required may grow in the future.</li>
<li>Locate the Bitcoin data directory, and copy the directory with all contents to the encrypted drive.
<p>For help finding this directory, see <b>[[Locating Bitcoin's Data Directory|Securing_your_wallet#Locating_Bitcoin_s_data_directory]]</b>.</p></li>
<li>Create a Windows shortcut that starts Bitcoin with the <code>-datadir</code> parameter and specifies the encrypted drive and directory.
<p>For example, if you installed Bitcoin in the default directory, mounted your Bitcoin encrypted drive as <code>E:\</code>, and stored your Bitcoin data directory on it as <code>Bitcoin</code>, you would type the following command as the shortcut Target:</p>
<blockquote><code>C:\Program Files\Bitcoin\bitcoin.exe -datadir=E:\Bitcoin</code></blockquote></li>
<li>Open Bitcoin's settings and configure it <b>NOT</b> to start automatically when you start Windows.
<p>This is to allow you to mount the Bitcoin encrypted disk image before starting Bitcoin.</p></li>
<li>Shut down Bitcoin, and then restart it from the new shortcut.</li>
</ol>

After doing this, any time you want to use Bitcoin, you must first mount the Bitcoin encrypted disk image using the same drive designation, and then run Bitcoin from the shortcut that you created, so that it can find its data and your wallet.


### General Solutions

Your wallet.dat file is not encrypted by the Bitcoin program by default but the most current release of the Bitcoin client provides a method to encrypt with a passphrase the private keys stored in the wallet. Anyone who can access an unencrypted wallet can easily steal all of your coins.  Use one of these encryption programs if there is any chance someone might gain access to your wallet.

* [7-zip](http://www.7-zip.org/) - Supports strongly-encrypted archives.
* [AxCrypt by Axantum](http://www.axantum.com/axcrypt/)
* [lrzip](http://lrzip.kolivas.org) - Compression software for Linux and OSX that supports very high grade password protected encryption
* [TrueCrypt](http://www.truecrypt.org/) - Volume-based on-the-fly encryption (for advanced users)

There is also a list of [[open source encryption software.|OpenSourceEncryptionSoftware]]

Decrypting and encrypting the wallet.dat every time you start or quit the Bitcoin client can be *tedious* (and outright error-prone). If you want to keep your wallet encrypted (except while you're actually running the Bitcoin client), it's better to relegate the automation to a [small shell script](http://lorelei.kaverit.org/bitcoin.sh) that handles the en/decryption and starting up Bitcoin client for you (Linux and OSX). 

There is also a method to print out and encrypt your wallet.dat as a special, scannable code. See details here: [[WalletPaperbackup]]

#### Password Strength
Brute-force password cracking has come a long way. A password including capitals, numbers, and special characters with a length of 8 characters can be trivially solved now (using appropriate hardware). The recommended length is **at least** 12 characters long.  You can also use a multi-word password and there are techniques to increase the strength of your passwords without sacrificing usability. [The Usability of Passwords](http://www.baekdal.com/tips/password-security-usability) 

However, simply using dictionary words is also insecure as it opens you up to a dictionary attack. If you use dictionary words, be sure to include random symbols and numbers in the mix as well.

If you use keyfiles in addition to a password, it is unlikely that your encrypted file can ever be cracked using brute-force methods, even when even a 12 character password might be too short.

Assume that any encrypted files you store online (eg. Gmail, Dropbox) will be stored somewhere forever and can never be erased.

##### Choosing A Strong Password
Make sure you pick at least one character in each group:<br />

	Lowercase: abcdefghijklmnopqrstuvwxyz
	Uppercase: ABCDEFGHIJKLMNOPQRSTUVWXYZ
	Number: 1234567890
	Symbol: `~!@#$%^&*()-_=+\{[]};:'",<.>/? (space)

	<9 char = unsuitable for use
	09 char = insecure
	10 char = low security
	11 char = medium security
	12 char = good security (good enough for your wallet)
	13 char = very good, enough for anything.

You might want to read [What is your way to create good passwords that can actually be remembered?](http://security.stackexchange.com/questions/662/what-is-your-way-to-create-good-passwords-that-can-actually-be-remembered) and [XKCD #936: Short complex password, or long dictionary passphrase?](http://security.stackexchange.com/questions/6095/xkcd-936-short-complex-password-or-long-dictionary-passphrase)

## Backing up your wallet

Backing up your wallet is not necessary if you use a wallet with implemented [[BIP_0032]] (hierarchical deterministic wallet). Today, only [[TREZOR]], [[Electrum]] and [[CarbonWallet]] fully support BIP 0032.

For advise on the backup process see [[Backing up your wallet|Backingup_your_wallet]].

##Erasing Plain-text Wallets

In most operating systems, including Windows, Linux, and Mac OS X, simply deleting a wallet.dat file will *not* generally destroy it. It is likely that advanced tools can still be used to recover the wallet.dat file, even after it has been deleted.

The Linux **shred** command can be used to overwrite the wallet file with random data prior to deleting; this particular copy of the file will then be practically impossible to recover.  Using shred (and similar tools on Windows) however does not guarantee that still other copies don't exist somewhere hidden on your HD. That will depend on your system configuration and what packages you have installed. Some system restore and backup tools, for instance, create periodic snapshots of your  filesystem, duplicating your wallet.dat.

In Mac OS, the equivalent of **shred** is **srm** (introduced in Leopard). Using the Finder to remove files, clicking "Secure Empty Trash" in the Finder menu will shred the contents of the trash can. As with any OS this doesn't guarantee that there are not other copies elsewhere on your system.

For Windows, the built-in command *cipher /W* will shred all previously-deleted files. [CyberShredder](http://www.cylog.org/utilities/cybershredder.jsp) can securely deleted individual files.

##Online and Mobile Wallets

Thus far, this article has been discussing the security of a wallet file for Bitcoin-QT or bitcoind that is under your sole control. 


Online wallets have a number of pros and cons to consider. For example, you can access your wallet on any computer in the world, but you are essentially storing your private keys or wallet with the provider of the online wallet. 
Depending on the level of security of such service, your bitcoins may be lost if the service is compromised. 

The invention of [[hardware_wallet]]s makes it possible to use online wallets in a more secure manner.
A hardware wallet keeps your private keys apart from the computer and internet. An online wallet compatible with a hardware wallet (such as [myTREZOR.com](http://mytrezor.com)) then does not need to store any sensitive data (private keys, passwords or email addresses) and only serves as tool for broadcasting transactions signed in the hardware wallet out to the blockchain. 


Mobile wallet applications are available for Android devices that allow you to send bitcoins by QR code or NFC, but this opens up the possibility of loss if mobile device is compromised. It may be possible to encrypt and backup the wallet or private keys on a mobile device but it is not advisable to store a large amount of bitcoins there without doing your own research and testing. Mobile wallets are useful for small spending and not for storing your bitcoin savings.

##See Also

* [[Data_directory]]
* [[How_to_import_private_keys]]
* [Where to get a Bitcoin wallet](https://www.weusecoins.com/en/getting-started/)
* [What is Bitcoin?](https://www.weusecoins.com/)
* [Bitcoin Mining](https://www.bitcoinmining.com/)
* [Video: What is Bitcoin Mining](https://www.youtube.com/watch?v=GmOzih6I1zs)
* [Secure Bitcoin Wallet Tutorial](http://startbitcoin.com/how-to-create-a-secure-bitcoin-wallet/)
* [[How_to_set_up_a_secure_offline_savings_wallet]]
* [Bitcoin Gateway - A Peer-to-peer Bitcoin Vault and Payment Network](http://arimaa.com/bitcoin/)
* [Find lost wallet eg. after disk format, using Photorec](http://blog.cyplo.net/2012/04/01/bitcoin-wallet-recovery-photorec/)
* [The Ultimate Guide to Web Wallet Security](https://docs.google.com/document/d/1dNZ7N_lQXHQp0jWkeN7dW4bWNMpcTBRM4iEoSuQwLho/edit#)

[[!tag "Security"]]

[[de:Sichere deine Geldbörse]]
[[ru:Bitcoin и безопасность]]
[[es:Cómo asegurar su monedero]]
[[zh-cn:保护你的钱包]]
