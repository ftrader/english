The term "Colored Coins" loosely describes a certain class of methods for representing and managing **real world assets** on top of the [[Bitcoin Blockchain|Bitcoin#The_block_chain]].

While originally designed to be a currency, [[Bitcoin's|Bitcoin]] [[scripting language|Script]] allows to store small amounts of metadata on the blockchain, which can be used to **represent** asset manipulation instructions. For example, we can encode in a Bitcoin transaction that 100 units of a new asset were issued and are now credited to a given [[bitcoin address|Address]]. A *colored coins wallet* can create a Bitcoin transaction that encodes sending 50 units of an asset from one address to a new address, and so on.

Real world **Value** is attached to those units (or "digital tokens") by the asset issuer's promise to **redeem** them for some goods or services. For example, a 100 seat movie theater can issue 100 units of a "watch movie X at time Y" asset and promise to redeem each unit for a right to enter a certain screening of a movie.

The advantage of using Bitcoin's blockchain as the backbone leverages Bitcoin's strengths, such as immutability, non-counterfeitability, ease of transfer, robustness and transparency thus allowing asset manipulation with unprecedented security and ease.

In principle one can represent asset manipulation data on other blockchains (e.g. [Litecoin](https://litecoin.org)). The term "Colored Coins" is usually associated with implementations that 

* Use the **Bitcoin** blockchain (as opposed to e.g. [NXT](http://nxt.org/)) 
* Do not issue an auxiliary coin (e.g. [Mastercoin's MSC](https://en.wikipedia.org/wiki/Mastercoin) or [counterpary's XCP](http://counterparty.io/))

Note that the term *Colored Coins* stuck from older implementations where an asset was actually associated with [[satoshis|Satoshi_(unit)]] (thus "coloring" them). Modern implementations use more [efficient](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Coloring%20Scheme) ways to encode assets on the blockchain, mostly using the [OP_RETURN](http://bitcoin.stackexchange.com/questions/29554/explanation-of-what-an-op-return-transaction-looks-like) scripting code, so it is [no longer the case](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Faq#coloring-satoshis) that individual satoshis are "colored".

##Use Cases
Colored coins allow you to store assets on the [[Bitcoin blockchain|Coinprism.info]]. There are many interesting applications to colored coin. You could have an IPO on the blockchain by issuing shares as a colored coins, and send them to your shareholders. The shares can then be traded almost instantaneously and for free through the Bitcoin blockchain. You could have smart properties represented by colored coins. You could store your house on the blockchain by issuing a single coin, then the ownership of the house can be transferred with a simple Bitcoin transaction.
##Bitcoin 2.0
###Using the power of Bitcoin Blockchain technology for new use-cases other than currency

* The next generation of bitcoin developments
* Utilizing the power of Bitcoin Blockchain for new use-cases other than currency and extending its flexibility
* Wider range of digital transactions
* A complete multi asset economy



##Open Assets Block Explorer
[[Coinprism]] offers a colored coin [[Bitcoin blockchain|Coinprism.info]] explorer.

##ColoredCoins.org Block Explorer
[ColoredCoins.org](http://coloredcoins.org/) offers a public [search engine](http://coloredcoins.org/#/) for digital assets, all open source.

##Open Assets
[Open Assets](https://github.com/OpenAssets/open-assets-protocol/blob/master/specification.mediawiki) is a Colored Coin implementation based on the [[OP_RETURN|Script#Provably_Unspendable.2FPrunable_Outputs]] operator. Metadata is linked from the Blockchain and stored on the web.

###Example of an Open Assets OP_RETURN marker output
This example illustrates how a marker output is decoded. Assuming the marker output is output 1:

	Data in the marker output      Description
	-----------------------------  -------------------------------------------------------------------
	0x6a                           The OP_RETURN opcode.
	0x10                           The marker output is 16 bytes long.
	0x4f 0x41                      The Open Assets Protocol tag.
	0x01 0x00                      Version 1 of the protocol.
	0x03                           There are 3 items in the asset quantity list.
	0xac 0x02 0x00 0xe5 0x8e 0x26  The asset quantity list:
	- '0xac 0x02' means output 0 has an asset quantity of 300.
	- Output 1 is skipped and has an asset quantity of 0
	because it is the marker output.
	- '0x00' means output 2 has an asset quantity of 0.
	- '0xe5 0x8e 0x26' means output 3 has an asset quantity of 624,485.
	- Outputs after output 3 (if any) have an asset quantity of 0.
	0x04                           The metadata is 4 bytes long.
	0x12 0x34 0x56 0x78            Some arbitrary metadata.

###Current projects leveraging Open Assets

* [[!img "Coinprism_Favicon.png" size=16x16 link=https://www.coinprism.com]] [[Coinprism]] colored coins web wallet
* [Coinprism](https://play.google.com/store/apps/details?id=com.coinprism.wallet) colored coins Android app
* [Reference implementation](https://github.com/OpenAssets/openassets) on GitHub
* [Colorcore](https://github.com/OpenAssets/colorcore): Open source wallet for Open Assets
* [[Coinprism.info]] colored coins blockchain explorer
* [Coinprism Assets directory](https://www.coinprism.info/assets)
* [openassets Python library](https://github.com/OpenAssets/openassets)
* [.NET Bitcoin library NBitcoin](https://github.com/NicolasDorier/NBitcoin)

##CoinSpark

[CoinSpark](http://coinspark.org/) is a Colored Coin implementation that uses a lightweight (SPV) desktop wallet for Windows, Mac or Linux. In CoinSpark, contracts are hosted on the issuer's website and notarized on the blockchain. Like Open Assets, it uses [[OP_RETURNs|Script#Provably_Unspendable.2FPrunable_Outputs]] to store metadata, with a highly efficient encoding scheme that allows multiple transfers of different assets to be encoded in a single transaction. CoinSpark [software libraries](http://coinspark.org/developers/source-libraries/) are available for C/C++, Java, Javascript, PHP and Python, and there's a detailed [developers guide](http://coinspark.org/developers/) with examples.

##Colu Colored Coins Implementation

A new Colored Coins implementation was developed by [Colu](http://colu.co/) and fully [open sourced](https://github.com/Colored-Coins/) on June 2015. The new implementation is based on attaching data to transactions using the OP_RETURN field. Colu's [coloring scheme](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Coloring-Scheme/) uses high data compression, can associate unlimited amounts of metadata with bitcoin transactions through the use of publicly available torrent files and supports smart contract functionalities. 

###Main Features

####Smarts Contracts capabilities
A [Rule Engine](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Rules/) for issuing digital assets with various capabilities: expiration dates, restricted access, additional fees (supporting [affiliate marketing](https://en.wikipedia.org/wiki/Affiliate_marketing)), limitations on further issuance, etc. 

####Using Torrents for Metadata storage
[Metadata](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Metadata/) is stored in publicly available [torrent files](https://en.wikipedia.org/wiki/BitTorrent), only a reference is stored directly on the blockchain. This allows for

* **Maximal Decentralization**  
* **Unlimited Size** - Since metadata is not stored directly on the blockchain it's size is unlimited and can contain information like: track record, history, description, validity or any information the issuer finds relevant. 

####Flexible metadata handling
Adding [metadata](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Benefits#metadata-on-every-colored-transaction) on every transaction, supporting the addition of relevant metadata that was not yet available during issuance (e.g. mentioning a specific seat number on a movie theater token). 

####Coherent Issuance Policy
Enforcing a coherent issuance policy by supporting two types of assets, [locked and unlocked](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Benefits/). 

* [Locked Assets](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Benefits#locked-assets) - A fixed amount is defined during issuance. No one can issue more units of the asset, not even the issuer.
* [Unlocked Assets](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Benefits#unlocked-assets) - The issuer can keep issuing more units.

####Support for thin (SPV) wallets 
The new implementation supports [SPV clients](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Benefits#support-for-thin-wallets) - nodes that can ***verify colored transactions*** without running a [full Bitcoin node](https://bitcoin.org/en/full-node#what-is-a-full-node).

####Efficiency and Low Cost

* *Data compression* - high level of data compression using a [ precision encoding scheme](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Number%20Encoding) for encoding asset issuance and transfer amounts.
* Sending [Multiple Assets in Single Transaction](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Coloring-Scheme#issuance-transaction-encoding/) 
* **Minimal Blockchain Bloat**

####Support for Zero Confirmations
The new architecture supports asset [issuance and transfer in zero confirmations](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Benefits#support-for-zero-confirmation-transactions) (even  within the same transaction) - the Asset ID references only the first UTXO in the transaction and makes no reference to a block.

###Resources

* [[!img "Colu-favicon.png" size=16x16 link=https://colu.co]] [Colu](https://colu.co) 
* [[!img "Ccorg.png" size=16x16 title="http://ColoredCoins.org"]] [ColoredCoins.org](http://ColoredCoins.org) 
* [[!img "Ccorg.png" size=16x16 title="http://coloredcoins.org/explorer"]] [ColoredCoins.org Block Explorer](http://coloredcoins.org/explorer)
* [[!img "Ccorg.png" size=16x16 title="http://coloredcoins.org/documentation"]] [ColoredCoins.org API](http://coloredcoins.org/documentation)
* [[!img "Github.png" size=16x16 title="http://coloredcoins.org/documentation"]] [ColoredCoins.org Protocol Specification](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/)
* [[!img "Github.png" size=16x16 title="http://coloredcoins.org/documentation"]] [Implementation open source code](https://github.com/Colored-Coins/) 

[[!tag "Financial"]]
[[!tag "Colored_Coins"]]
[[!tag "Digital_Currencies"]]
[[!tag "FinTech"]]
[[!tag "Bitcoin_2.0"]]
[[!tag "Blockchain_Technology"]]
