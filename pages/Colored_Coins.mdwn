The term "Colored Coins" loosely describes a certain class of methods for representing and managing **real world assets** on top of the [[Bitcoin Blockchain|Bitcoin#The_block_chain]].

While originally designed to be a currency, [[Bitcoin's|Bitcoin]] [[scripting language|Script]] allows to store small amounts of metadata on the blockchain, which can be used to **represent** asset manipulation instructions. For example, we can encode in a Bitcoin transaction that 100 units of a new asset were issued and are now credited to a given [[bitcoin address|Address]]. A *colored coins wallet* can create a Bitcoin transaction that encodes sending 50 units of an asset from one address to a new address, and so on.

Real world **Value** is attached to those units (or "digital tokens") by the asset issuer's promise to **redeem** them for some goods or services. For example, a 100 seat movie theater can issue 100 units of a "watch movie X at time Y" asset and promise to redeem each unit for a right to enter a certain screening of a movie.

The advantage of using Bitcoin's blockchain as the backbone leverages Bitcoin's strengths, such as immutability, non-counterfeitability, ease of transfer, robustness and transparency thus allowing asset manipulation with unprecedented security and ease.

In principle one can represent asset manipulation data on other blockchains (e.g. [Litecoin](https://litecoin.org)), however, the term "Colored Coins" is usually associated with implementations that

* Run on top of the Bitcoin blockchain
* Do not issue an auxiliary coin (e.g. [Mastercoin](https://en.wikipedia.org/wiki/Mastercoin))

Note that the term *Colored Coins* stuck from older implementations where an asset was actually associated with satoshis (thus "coloring" them). Modern implementations use more efficient ways to encode assets on the blockchain, mostly using the [OP_RETURN](http://bitcoin.stackexchange.com/questions/29554/explanation-of-what-an-op-return-transaction-looks-like) scripting code and it is [no longer the case](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Faq#coloring-satoshis) that individual satoshis are "colored".

##Use Cases
Colored coins allow you to store assets on the [[Bitcoin blockchain|Coinprism.info]]. There are many interesting applications to colored coin. You could have an IPO on the blockchain by issuing shares as a colored coins, and send them to your shareholders. The shares can then be traded almost instantaneously and for free through the Bitcoin blockchain. You could have smart properties represented by colored coins. You could store your house on the blockchain by issuing a single coin, then the ownership of the house can be transferred with a simple Bitcoin transaction.
##Bitcoin 2.0
###Using the power of Bitcoin Blockchain technology for new use-cases other than currency

* The next generation of bitcoin developments
* Utilizing the power of Bitcoin Blockchain for new use-cases other than currency and extending its flexibility
* Wider range of digital transactions
* A complete multi asset economy



##Open Assets Block Explorer
[[Coinprism]] offers a colored coin [[Bitcoin blockchain|Coinprism.info]] explorer.

##ColoredCoins.org Block Explorer
[ColoredCoins.org](http://coloredcoins.org/) offers a public [search engine](http://coloredcoins.org/#/) for digital assets, all open source.

##Open Assets
[Open Assets](https://github.com/OpenAssets/open-assets-protocol/blob/master/specification.mediawiki) is a Colored Coin implementation based on the [[OP_RETURN|Script#Provably_Unspendable.2FPrunable_Outputs]] operator. Metadata is linked from the Blockchain and stored on the web.

###Example of an Open Assets OP_RETURN marker output
This example illustrates how a marker output is decoded. Assuming the marker output is output 1:

	Data in the marker output      Description
	-----------------------------  -------------------------------------------------------------------
	0x6a                           The OP_RETURN opcode.
	0x10                           The marker output is 16 bytes long.
	0x4f 0x41                      The Open Assets Protocol tag.
	0x01 0x00                      Version 1 of the protocol.
	0x03                           There are 3 items in the asset quantity list.
	0xac 0x02 0x00 0xe5 0x8e 0x26  The asset quantity list:
	- '0xac 0x02' means output 0 has an asset quantity of 300.
	- Output 1 is skipped and has an asset quantity of 0
	because it is the marker output.
	- '0x00' means output 2 has an asset quantity of 0.
	- '0xe5 0x8e 0x26' means output 3 has an asset quantity of 624,485.
	- Outputs after output 3 (if any) have an asset quantity of 0.
	0x04                           The metadata is 4 bytes long.
	0x12 0x34 0x56 0x78            Some arbitrary metadata.

###Current projects leveraging Open Assets

* [[!img "Coinprism_Favicon.png" size=16x16 link=https://www.coinprism.com]] [[Coinprism]] colored coins web wallet
* [Coinprism](https://play.google.com/store/apps/details?id=com.coinprism.wallet) colored coins Android app
* [Reference implementation](https://github.com/OpenAssets/openassets) on GitHub
* [Colorcore](https://github.com/OpenAssets/colorcore): Open source wallet for Open Assets
* [[Coinprism.info]] colored coins blockchain explorer
* [Coinprism Assets directory](https://www.coinprism.info/assets)
* [openassets Python library](https://github.com/OpenAssets/openassets)
* [.NET Bitcoin library NBitcoin](https://github.com/NicolasDorier/NBitcoin)

##CoinSpark

[CoinSpark](http://coinspark.org/) is a Colored Coin implementation that uses a lightweight (SPV) desktop wallet for Windows, Mac or Linux. In CoinSpark, contracts are hosted on the issuer's website and notarized on the blockchain. Like Open Assets, it uses [[OP_RETURNs|Script#Provably_Unspendable.2FPrunable_Outputs]] to store metadata, with a highly efficient encoding scheme that allows multiple transfers of different assets to be encoded in a single transaction. CoinSpark [software libraries](http://coinspark.org/developers/source-libraries/) are available for C/C++, Java, Javascript, PHP and Python, and there's a detailed [developers guide](http://coinspark.org/developers/) with examples.

##Colu Colored Coins Implementation

A new Colored Coins implementation developed by [Colu](http://colu.co/) (June 2015), based on attaching value to transactions using the OP_RETURN field on the Blockchain. Colu's [coloring scheme](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Coloring-Scheme/) enables to compress massive amount of data into a limited space and new functionalities with the Rule Engine tool. 
The Metadata is attached to the digital assets using Torrent technology so every asset is published publicly.

###Open Source
The new Colored Coins protocol specification for issuing and transacting digital assets on top of the Bitcoin Blockchain is all [open source](https://github.com/Colored-Coins/). 

###Main Features

* Smarts Contracts Compatible - [Rule Engine](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Rules/) for issuing digital assets with various capabilities: time limitations - expiry date, access abilities to authorized holders, additional fees on specific address and limited permission to issue more of the same asset. 

* Maximum Decentralization Using Torrents - automatically storing [metadata](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Metadata/) that can be freely accessed and verified  in torrent files. The metadata size is unlimited and can contain information like: track record, history, description, validity or any information the issuer finds relevant. 

* Data Storage Flexibility - adding [endless amount of metadata](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Data%20Storage%20Methods/) on every transaction is available not only during issuance, but also in future transactions after the asset was issued. 

* Issuance Policy - enforcing a coherent issuance policy by supporting two types of assets, [locked and unlocked](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Benefits/). Locked Assets - assets who contain a fixed amount that is defined during the issuance, no one can issue more units of it, not even the issuer himself. Unlocked Assets - issuer can keep issuing more units of their asset.

* Support thin wallets (SPV compatible) - the protocol verifies colored transactions without running a full Bitcoin node.

* [Send Multiple Assets in Single Transaction](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Coloring-Scheme#issuance-transaction-encoding/) 

* Zero Confirmation Support - the architecture allows to support asset issuance transfer it in zero confirmations (and with the same transaction)- the [Asset ID](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Asset%20ID/) references only to the first UTXO in the transaction and makes no reference to a block.

* Low Prices and minimal bloat - high level of data compression using the same encoding of[asset transfer](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Transfer%20Encoding/) and [issuance amounts](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/wiki/Number%20Encoding/)

###Resources

* [[!img "Colu-favicon.png" size=16x16 link=https://colu.co]] [Colu](https://colu.co) 
* [[!img "Ccorg.png" size=86x86 title="http://ColoredCoins.org"]] [ColoredCoins.org](http://ColoredCoins.org) 
* [[!img "Colu-favicon.png" size=16x16 title="http://ColoredCoins.org"]] [ColoredCoins.org](http://ColoredCoins.org) 
* [ColoredCoins.org Block Explorer](http://coloredcoins.org/explorer/)
* [ColoredCoins.org API](http://coloredcoins.org/documentation/) 
* [ColoredCoins.org Protocol Specification](https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification/)
* [Github](https://github.com/Colored-Coins/)

[[!tag "Financial"]]
[[!tag "Colored_Coins"]]
[[!tag "Digital_Currencies"]]
[[!tag "FinTech"]]
[[!tag "Bitcoin_2.0"]]
[[!tag "Blockchain_Technology"]]
