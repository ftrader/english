An RPC method used by a miner to get hashing work to try to solve.

##Pseudocode

(Just ignore the midstate until you understand the internals of SHA256.)

calculate: hash = SHA256(SHA256(bigEndianToLittleEndianForEach32BitBlock(data)))

If that meets the [[difficulty]], you win (generated a [[block|Blocks]] or share)!

If not, increment the [[Nonce]] that is a number stored in portion of the data that starts 640 bits in (bytes 76 to 79), and try again.

If the incremented portion overflows, get new work (see also [[rollntime extension|#rollntime]]).

##Extensions

When getting new work, miners should send a X-Mining-Extensions header with a space-delimited list of supported extensions:

### hostlist
[Original specification from Deepbit](https://deepbit.net/failover.php)

The server may include a X-Host-List header with a list of available servers formatted in JSON as an array of objects with server details.
"host" specifies the server's hostname or IP address, "port" specifies a TCP port, and "ttr" is "time to return".
If you use server with non-zero ttr you should try to return to the server with 0 ttr after this number of minutes.

Example:
	X-Host-List: {}{}[(1)]("host":"backup.tld","port":8332,"ttr":20)

This string says that "server.tld" is the main server.
When you detect connection problems, you need to try the next server - "backup.tld" for 20 minutes and then try to switch back to "server.tld".
If the main server is still offline you should continue to use "backup.tld" for another 20 minutes.
	
Failover workflow:

1. Choose the first working server while cycling from left to right
1. if "ttr" of the server is greater than zero, go to 1) after this amount of minutes.

### longpoll
[Original specification from Deepbit](https://deepbit.net/longpolling.php)

If mining pool does supports Long Polling, it should include a X-Long-Polling header with a relative or absolute URI. The absolute URI may specify a different port than the original connection. Miner must start a request to long polling URI with GET method and same basic authorization as on main connection. This request is not answered by server until it wishes to expire current block data, and new data is ready. The answer is the same as getwork on the main connection. Upon receiving this answer, miner should drop current calculation in progress, discard its result, and start working on received data and make a new request to a long polling URI. There is a 60 second limit before new work should be requested (the normal way) regardless of response from longpoll (though this may be overridden by the [[rollntime extension below|#rollntime]]).

### midstate
This should be advertised iff the miner supports generating its own midstates. In this case, the pool may decide to omit the now-deprecated "midstate" and "hash1" fields in the work response.

### noncerange
[noncerange discussion forum thread](https://bitcointalk.org/index.php?topic=24336.0)

In addition to X-Mining-Extensions, the miner should also send X-Mining-Hashrate, with an integer value of expected hashrate measured in full hashes per second.
The server may then add an additional field to the JSON response, "noncerange", which contains two 32-bit integers specifying the starting and final nonce the miner is allowed to scan.
While both values are (as with the rest of the response) given in big endian, miners should iterate over the range in their native 32-bit integer type (SHA256 works with 32-bit integers, not character data).
The miner should implement rollntime by starting from the first nonce in the range every second.

Example:
	"noncerange": "000000001fffffff"
Response:
	solution: "...dddddd1f..."

### reject-reason
NOTE: Clients should not need to advertise this feature in X-Mining-Extensions.

When a share is rejected, the server may include a X-Reject-Reason header indicating the reason why it was rejected.
Values for this header are undefined.

### rollntime
[rollntime expiration discussion forum thread](https://bitcointalk.org/index.php?topic=22561.0)

Iff the getwork response includes a "X-Roll-NTime" header with any value other than "N" or the null string, the miner may (within reason) change the ntime field in addition to the nonce.
The server may send a value of "expire=<N>", where <N> is an integer number of seconds it is willing to accept the other headers for.
Note that if the "X-Roll-NTime" header is NOT present in a work response, that work may NOT be rolled, even if earlier work from the same server allowed it.
Also note that the headers of a share submission should not influence the behaviour of work-- specifically, if a share submit does not have the header, it should not disable rollntime for the current work (which did).

Due to network latency, [Luke-Jr](User:Luke-jr) recommends the following design for miners:

1. getwork, record <duration of getwork request> and <time+getwork expire> , and begin mining on it
1. every second, update ntime and reset nonce to <first nonce>
1. when a share is found, submit it. record the duration of the submit request.
1. if a share submission fails due to a network error, save the share and retry it a second later the same as step 3; also immediately (regardless of how long the current work has been active) begin trying to get new work (which is treated the same as step 5+6 when done)
1. when current time is past <time@1+getwork expire> minus <duration of longest getwork/submit since we started this work> times 4, begin a request for new work
1. when new work arrives, discard old work and begin using the new work.

### submitold
This feature should only be advertised with a longpoll request. If received with a regular request, it should be ignored.

If supported, the server may include a X-Submit-Old header. If this header is present, the miner should NOT discard the result of old work (default per longpoll specification), but instead submit them to the server. The miner should still stop working on the old work, and begin working on the new work as soon as it can without losing the result of the old work.

### switchto
[Original specification from Deepbit](https://deepbit.net/failover.php)

The server may include a X-Switch-To header containing a single JSON object formatted in the same fashon as items in the [[hostlist array extension|#hostlist]].
If this header is present, the miner should switch to the specified server for at least ttr minutes after finishing current "getwork" and submitting its results.

Example:
	X-Switch-To: {"host":"temporary.tld","port":8332,"ttr":10}
