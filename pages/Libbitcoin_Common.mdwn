The common [libbitcoin](https://github.com/libbitcoin/libbitcoin) library is a dependency of all others with the exception of [[libbitcoin-consensus|Libbitcoin_Consensus]]. It was the first library created and originally contained the core functionality of all of the others.

##Example
	#include <iostream>
	#include <string>
	#include <bitcoin/bitcoin.hpp>
	
	// Extract Satoshi's words.
	int main()
	{
	const auto block = bc::genesis_block();
	const auto& tx = block.transactions[[0]];
	const auto& input = tx.inputs[[0]];
	const auto script = bc::save_script(input.script);
	std::string message(script.begin(), script.end());
	std::cout << message << std::endl;
	return 0;
	}

	♦   ↔☺♦EThe Times 03/Jan/2009 Chancellor on brink of second bailout for banks

##Bitcoin Related Features

* Key formats (raw, [BIP32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki), WIF, compressed/uncompressed, minikey)
* Encoding functions (base 2/10/16/58/64/85)
* Hash functions (ripemd160, sha1, sha256, sha512, hmac_sha256, hmac_sha512, pkcs5_pbkdf2_hmac_sha512)
* URL parsing ([BIP21](https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki) and [BIP72](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki))
* Mnemonic functions ([BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki))
* All published [mnemonic dictionaries](https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md)
* Curve math, deterministic ECDSA, verification and encryption functions
* Address functions (P2PKH and P2SH/[BIP16](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki)), 
* Stealth addresses functions (3.1) for wallets and blockchain search
* Wire and text serializable type library (P2P protocol)
* Bitcoin script engine (see [[libbitcoin-consensus|Libbitcoin_Consensus]] for more information)
* Asynchronous P2P networking stack built on [ASIO](https://think-async.com)

##General Purpose Features

* Logging utilities
* [Patricia Trie](http://en.wikipedia.org/wiki/Radix_tree) template optimized for binary search
* [UTF8 Everywhere](http://utf8everywhere.org) tools and integration for Windows
* Command line, configuration file and help processing utilities

##Build and Quality Control

* Autotools builds for GCC/Clang
* All build artifacts generated by [[libbitcoin-build|Libbitcoin_Build]]
* Extensive unit text matrix (based on [Boost Test](http://www.boost.org/doc/libs/1_55_0/libs/test/doc/html/index.html))
* Continuous integration builds via [Travis-CI](https://travis-ci.org/libbitcoin/libbitcoin)
* Visual Studio 2013 project and solution files
* Support for 32/64 bit processors and [endianness](http://en.wikipedia.org/wiki/Endianness) differences
* Uses C++11 advancements and restricts use of pointers and exceptions

##Dependencies

* [boost](http://www.boost.org)
* [libsecp256k1](https://github.com/bitcoin/secp256k1)
* [ICU](http://site.icu-project.org) (optional)

##See Also

* [[Libbitcoin]]

##References
3.1: [DarkWallet Stealth Design Document](https://wiki.unsystem.net/en/index.php/DarkWallet/Stealth)
