**OP_RETURN** is a [[script]] opcode used to mark a transaction output as invalid. Since the data after OP_RETURN are irrelevant to Bitcoin payments, arbitrary data can be added into the output after an OP_RETURN. Since any outputs with OP_RETURN are provably unspendable, OP_RETURN outputs can be used to [[burn|Proof_of_burn]] bitcoins.

Currently, the default Bitcoin client relays OP_RETURN transactions up to 80 bytes [(1)](https://github.com/bitcoin/bitcoin/search?utf8=%E2%9C%93&q=MAX_OP_RETURN_RELAYa), but does not provide a way for users to create OP_RETURN transactions.

## Is storing data in the blockchain acceptable?
Some members of the Bitcoin community believe that use of OP_RETURN violates the contract of Bitcoin, because Bitcoin was intended to provide a record for financial transactions, not a record for arbitrary data. Despite this, use of OP_RETURN may continue unabated because there is no easy way to stop people from embedding arbitrary data in the blockchain if they want to, and OP_RETURN is reasonably efficient in terms of [data bytes stored as a fraction of blockchain space consumed](http://i.imgur.com/VAGZWBK.png). Compared to some other ways of storing data in the blockchain, OP_RETURN has the advantage of not creating bogus UTXO entries. [Discussion on GitHub pull request](https://github.com/bitcoin/bitcoin/pull/5286)

From [Bitcoin Core release 0.9.0](https://bitcoin.org/en/release/v0.9.0#opreturn-and-data-in-the-block-chain):
<blockquote>
This change is not an endorsement of storing data in the blockchain. The OP_RETURN change creates a provably-prunable output, to avoid data storage schemes – some of which were already deployed – that were storing arbitrary data such as images as forever-unspendable TX outputs, bloating bitcoin's UTXO database.

Storing arbitrary data in the blockchain is still a bad idea; it is less costly and far more efficient to store non-currency data elsewhere.
</blockquote>

## OP_RETURN applications
OP_RETURN is used for writing human-language messages, digital asset proof-of-ownership, and storing data. Its use has been proposed for P2P application discovery. See the "prefixes" table below.

## OP_RETURN prefixes
Often, OP_RETURN transactions include a prefix to identify which protocol they belong to. There is no standardized method of claiming OP_RETURN prefixes, and not all OP_RETURN transactions use prefixes. At the time of writing, this wiki page is probably the most complete list of OP_RETURN prefixes. Note that this table is an attempt to catalog OP_RETURN prefixes that are already in use, *not* a system for reserving OP_RETURN prefixes!



|Prefix |Protocol
|---|---
|SPK |[CoinSpark](http://coinspark.org/developers/)
|DOCPROOF |[Proof of Existence](http://www.proofofexistence.com/)
|CryptoTests- |[Crypto Copyright](http://crypto-copyright.com/)
|CryptoProof- |
||[BlockSign](http://blocksignit.com/)
|OA |[Open Assets](https://github.com/OpenAssets/open-assets-protocol/blob/master/specification.mediawiki)
|STAMPD## |[stampd](http://stampd.io/)
|Factom|[Factom](http://factom.org/)
|FACTOM00 |[Factom](http://factom.org/)
|Fa |[Factom](http://factom.org/)
|FA |[Factom](http://factom.org/)
|tradle |[Tradle](http://tradle.io/)
|LaPreuve |[LaPreuve](http://www.lapreuve.net/)
|hex:5888 |[Blockstore](http://blog.onename.com/blockstore-bitcoin/)
|hex:5808 |[Blockstore](http://blog.onename.com/blockstore-bitcoin/)
|id |[Blockstore](http://blog.onename.com/blockstore-bitcoin/)
|BITPROOF |[Bitproof](https://bitproof.io/)
|S1 |[Stampery](https://stampery.co/)
|ASCRIBE |[Ascribe](https://www.ascribe.io/)
|ProveBit |[ProveBit](https://github.com/thereal1024/ProveBit)
|EW  |[Eternity Wall](http://eternitywall.it/)
|CC |[Colu](http://colu.co/)
|omni |[Omni Layer](http://www.omnilayer.org/)
|MG |[Monegraph](http://monegraph.com/)
|RMBd |[Remembr](https://app.remembr.io/)
|RMBe |[Remembr](https://app.remembr.io/)
|ORIGMY |[OriginalMy](http://originalmy.com/)


## External resources on OP_RETURN
### Viewing OP_RETURN

* [coinsecrets.org](http://coinsecrets.org/): An OP_RETURN transaction explorer
* [bitcoinstrings.com](http://bitcoinstrings.com/): A site showing raw strings in Bitcoin transactions

### Explaining OP_RETURN

* [python-OP_RETURN](https://github.com/coinspark/python-OP_RETURN)
* [StackExchange: Explanation of what an OP_RETURN transaction looks like](http://bitcoin.stackexchange.com/questions/29554/explanation-of-what-an-op-return-transaction-looks-like)
* [Metadata in the Blockchain: The OP_RETURN Explosion](http://www.slideshare.net/coinspark/bitcoin-2-and-opreturns-the-blockchain-as-tcpip)
* [How to Put Custom Messages Into Bitcoin Blockchain - OP_RETURN](http://wlangiewicz.com/blog/2014/10/24/how-to-put-custom-messages-into-bitcoin-blockchain-op-return/)
