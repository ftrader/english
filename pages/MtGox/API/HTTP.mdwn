Two versions of the HTTP API are currently available, see the following pages for details on the methods available for each:

* [[Version 0|MtGox/API/HTTP/v0]]
* [[Version 1|MtGox/API/HTTP/v1]]

## Summary

All HTTP API requests are sent to URLs beginning with <nowiki>https://mtgox.com/api/*</nowiki>. It allows placing orders, performing withdrawls, deposits, and other things. All responses are in [JSON](http://json.org/) format.

There is a [Ruby gem](https://rubygems.org/gems/mtgox), [guten-mtgox](https://rubygems.org/gems/guten-mtgox) and a [Perl module](Finance::MtGox) available for interacting with the HTTP API.

## Cache

All API methods are cached for 10 seconds. Do not request results more often than that, you might be blocked by the anti-DDoS filters.

## Currency Symbols
List of the currency symbols available with the API:

USD, AUD, CAD, CHF, CNY, DKK, EUR, GBP, HKD, JPY, NZD, PLN, RUB, SEK, SGD, THB

## Authentication

Authentication is performed by signing each request using HMAC-SHA512. The request must contain an extra value "nonce" which must be an always incrementing numeric value.  A reference implementation is provided here:

	**basically the base64 string should contain:**

* the binary representation of the api key id
* binary hmac-sha512 signature
* json data

api key looks like that: 12345678-abcd-1234-abcd-50286e649d5c

it's actually hexadecimal, it should be converted to binary

hash should then be appended (binary too) and then encode everything in base64

**Warning : the API is no more accepting authentication by login/pass ( since 2012 march 1 ) , you _need_ to use an API key.**

### PHP
<source lang="php">
<?php

function mtgox_query($path, array $req = array()) {
	// API settings
	$key = *;
	$secret = *;

	// generate a nonce as microtime, with as-string handling to avoid problems with 32bits systems
	$mt = explode(' ', microtime());
	$req[['nonce']] = $mt[[1]].substr($mt[[0]], 2, 6);

	// generate the POST data string
	$post_data = http_build_query($req, *, '&');

	// generate the extra headers
	$headers = array(
	'Rest-Key: '.$key,
	'Rest-Sign: '.base64_encode(hash_hmac('sha512', $post_data, base64_decode($secret), true)),
	);

	// our curl handle (initialize if required)
	static $ch = null;
	if (is_null($ch)) {
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/4.0 (compatible; MtGox PHP client; '.php_uname('s').'; PHP/'.phpversion().')');
	}
	curl_setopt($ch, CURLOPT_URL, 'https://mtgox.com/api/'.$path);
	curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);

	// run the query
	$res = curl_exec($ch);
	if ($res === false) throw new Exception('Could not get reply: '.curl_error($ch));
	$dec = json_decode($res, true);
	if (!$dec) throw new Exception('Invalid data received, please make sure connection is working and requested API exists');
	return $dec;
}

// example 1: get infos about the account, plus the list of rights we have access to
var_dump(mtgox_query('0/info.php'));

// old api (get funds)
var_dump(mtgox_query('0/getFunds.php'));

// trade example
// var_dump(mtgox_query('0/buyBTC.php', array('amount' => 1, 'price' => 15)));
</source>

### Python
Python version here: https://bitcointalk.org/index.php?topic=49789.msg592388#msg592388

### Node.js

Generic [[Node.js_Example]] trading library (supports MtGox and Bitfloor): https://github.com/bitfloor/trader.nodejs

### Java

basic [[Java_Example]] on https://gist.github.com/2396722 hoping for many java forks and pull requests on github

XChange API : https://github.com/timmolter/XChange

### Javascript Firefox addon

* [(1)](https://github.com/joric/mtgox-ticker) firefox ticker addon

##See Also

* [[Mt. Gox|MtGox]]
