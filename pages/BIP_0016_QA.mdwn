This page is a Quality Assurance test plan for BIP 16.  If you see a test missing, please add it.
If you can help test, please edit this page to sign-off on it.



|Done |Test Procedure |Tested by
|---|---|---
style="color:green;"|&#x2713;|Run BIP-16-capable Bitcoin 0.6 on testnet and main net<br />Send coins using GUI, RCP sendtoaddress, and RCP sendmany commands<br />Result: coins sent in all cases|Gavin Andresen
style="color:orange;"|&#x2713;|Run BIP-16-capable backport Bitcoin 0.3.19 through 0.5.1 on testnet and main net<br />Send coins using GUI, RCP sendtoaddress, and RCP sendmany commands<br />Result: coins sent in all cases|Gavin Andresen (tested 0.3.19, 0.3.24 and 0.5.1)
style="color:green;"|&#x2713;|Run BIP-16-capable Bitcoin 0.6.0 on testnet<br />Mine coins using built-in miner<br />Created blocks accepted, show up on blockexplorer.com/testnet<br />|Gavin Andresen
style="color:green;"|&#x2713;|Run BIP-16-capable Bitcoin 0.6.0 on testnet<br />Mine coins using getwork interface<br />Created blocks accepted, show up on blockexplorer.com/testnet<br />|Gavin Andresen
style="color:red;"||Run BIP-16-capable Bitcoin 0.6.0 on testnet<br />Mine coins using getmemorypool interface<br />Created blocks accepted, show up on blockexplorer.com/testnet<br />|
style="color:green;"|&#x2713;|Run BIP-16-capable Bitcoin 0.3.19 through 0.5.1 backports on testnet<br />Mine coins using built-in miner<br />Created blocks accepted, show up on blockexplorer.com/testnet<br />|Gavin Andresen (tested all on a testnet-in-a-box)
style="color:green;"|&#x2713;|Run BIP-16-capable Bitcoin 3.19 through 0.5.1 backports on testnet<br />Mine coins using getwork interface<br />Created blocks accepted, show up on blockexplorer.com/testnet<br />|Gavin Andresen (tested all on a testnet-in-a-box)
style="color:green;"|&#x2713;|Run BIP-16-capable Bitcoin 0.3.19 through 0.5.1 backports on testnet<br />Mine coins using built-in miner<br />Created blocks accepted, show up on blockexplorer.com/testnet<br />|Gavin Andresen (tested all on a testnet-in-a-box)
style="color:green;"|&#x2713;|Run BIP-16-capable Bitcoin 3.19 through 0.5.1 backports on testnet<br />Mine coins using getwork interface<br />Created blocks accepted, show up on blockexplorer.com/testnet<br />|Gavin Andresen (tested all on a testnet-in-a-box)
style="color:red;"
style="color:red;"||Run BIP-16-capable Bitcoin 3.19 through 0.5.1 backports on testnet<br />Mine coins using getmemorypool interface<br />Created blocks accepted, show up on blockexplorer.com/testnet<br />|
style="color:green;"|&#x2713;|Create/run unit tests for:<br />multisignature signing/verification<br />multisignature invalid signature failure<br />multisignature IsStandard() success/failure<br />extraction of addresses from multisignature transactions<br />BIP 16 IsStandard() success/failure (including failure with OP_PUSHDATA1/2/4)<br />BIP 16 AreInputsStandard() success/failure<br />BIP 16 compatibility with other 3 standard transaction types<br />BIP 16 no-recursion test<br />BIP 16 switchover date logic<br />OP_CHECKMULTISIG counting of signature operations inside BIP 16 transactions<br />|Gavin Andresen (see test/multisig_tests.cpp, test/script_tests.cpp, test/script_P2SH_tests.cpp, test/sigopcount_tests.cpp in the bitcoin source tree; 'make test_bitcoin' in src/ directory to compile)
style="color:green;"|&#x2713;|Create/run 'transaction fuzzer' to stress-test BIP 16 transactions|Gavin Andresen (https://github.com/gavinandresen/bitcoin-git/tree/fuzzer , run twice on both testnet-in-a-box and testnet with 100,000 'fuzzed' transactions each test run)

