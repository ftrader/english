The  [[getwork|Getwork]] protocol in late 2012.
The mining service specification was initially announced via [[Slushs_pool]]'s website (1.1).
Shortly thereafter, alternative "cheat sheet" style documentation was provided by [[BTCGuild]] (1.2).
As the extension lacks a formal [[BIP]] describing an official standard, it has further developed only by discussion and implementation (1.3).

##Protocol

###Overview
[See also: Original example on slush's pool site](http://mining.bitcoin.cz/stratum-mining/#example)


###Methods (client to server)

####mining.authorize
	mining.authorize("username"["password"](,))

The result from an authorize request is usually true (successful), or false.
The password may be omitted if the server does not require passwords.

####mining.submit
	mining.submit("username", "job id", "ExtraNonce2", "nTime", "nOnce")

Miners submit shares using the method "mining.submit".
Client submissions contain:

1. *Worker Name.*
1. *Job ID.*
1. *ExtraNonce2.*
1. *nTime.*
1. *nOnce.*

Server response is result: true for accepted, false for rejected (or you may get an error with more details).

####mining.subscribe
	mining.subscribe("user agent/version"["extranonce1"](,))

The optional second parameter specifies an extranonce1 the client wishes to resume working with (possibly due to a dropped connection).
If provided, a server MAY (at its option) issue the connection the same extranonce1.

The client receives a result:
	["subscription id 1"]("mining.set_difficulty",), [[mining.notify,_subscription_id_2]], "extranonce1", extranonce2_size
The result contains three items:

* *Subscriptions.* - An array of 2-item tuples, each with a subscription type and id.
* *ExtraNonce1.* - Hex-encoded, per-connection unique string which will be used for creating generation transactions later.
* *ExtraNonce2_size.* - The number of bytes that the miner users for its ExtraNonce2 counter.

###Methods (server to client)

####mining.notify
	mining.notify(...)

Fields in order:

1. *Job ID.* This is included when miners submit a results so work can be matched with proper transactions.
1. *Hash of previous block.* Used to build the header.
1. *Generation transaction (part 1).* The miner inserts ExtraNonce1 and ExtraNonce2 after this section of the transaction data.
1. *Generation transaction (part 2).* The miner appends this after the first part of the transaction data and the two ExtraNonce values.
1. *List of merkle branches.* The generation transaction is hashed against the merkle branches to build the final merkle root.
1. *Bitcoin block version.* Used in the block header.
1. *nBits.* The encoded network difficulty. Used in the block header.
1. *nTime.* The current time. nTime rolling should be supported, but should not increase faster than actual time.
1. *Clean Jobs.* If true, miners should abort their current work and immediately use the new job. If false, they can still use the current job, but should move to the new one after exhausting the current nonce range.

####mining.set_difficulty
	mining.set_difficulty(difficulty)

The server can adjust the difficulty required for miner shares with the "mining.set_difficulty" method.
The miner should begin enforcing the new difficulty on the next job received.
Some pools may force a new job out when set_difficulty is sent, using clean_jobs to force the miner to begin using the new difficulty immediately.

##Software support

Tables showing miner/server support for Stratum mining protocol:

* [[Mining_software]]
* [[Poolservers]]

##Criticism

###Closed development

The mining extensions have been criticised as having been developed behind closed doors without input from the wider development and mining community, resulting in various obvious problems that could have been addressed had it followed the standard [[BIP]] drafting process (13.1).

###Displacing GBT

The mining extensions were announced after the community had spent months developing a mostly superior open standard protocol for mining ([[getblocktemplate]]) (14.1).
Because stratum's mining extensions launched backed by a major mining pool, GBT adoption suffered, and decentralised mining is often neglected while stratum is deployed.

##References

1.1: [Stratum mining protocol specification at slush's pool's website](http://mining.bitcoin.cz/stratum-mining/)  
1.2: [Stratum mining protocol cheat sheet at BTCGuild's website](https://www.btcguild.com/new_protocol.php)  
1.3: [ckolivas' collection of most proposed stratum mining extensions](https://bitcointalk.org/?topic=108533.0)  
13.1: [BitcoinTalk: Criticism of stratum's closed creation](https://bitcointalk.org/?topic=557991.msg6079772#msg6079772)  
14.1: [BitcoinTalk: Criticism of stratum displacing GBT](https://bitcointalk.org/?topic=557991.msg6105355#msg6105355)

