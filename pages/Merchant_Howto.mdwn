[[!template id=merge How to accept Bitcoin, for small businesses]]

Accepting Bitcoins is easy, and there are several ways to do it.

##Manually

1. Download a bitcoin client
1. When a customer wants to buy something, send them a Bitcoin address where their payment should be sent.
1. * You can do this by clicking "New.." next to your address in the Bitcoin client and sending that address to the customer.
1. When payment comes in to that address, send the goods to your customer.  Depending on the value of what you're selling, you may wish to wait until the payment shows Confirmed.
1. To issue a refund, obtain from the customer the [[bitcoin address|Address]] where the refund payment should be sent.  The refund address will likely be different from the address used when the customer sent payment, especially if an [[EWallet]] was used by the customer.

##Automated
###Pre-generating Bitcoin addresses
You can accept Bitcoins on your website without needing to use Bitcoin APIs or third party services if you pre-generate a large number of receiving Bitcoin addresses and store them in a database on your web server, and dispense them one-by-one to customers when they are ready to pay.  This way, your web server never actually handles the bitcoins - it simply gives out addresses belonging to a wallet you maintain elsewhere.  By using a unique address per order, you will always know which payment belongs to which order.  [Example of website using this method](https://www.casascius.com)

To pre-generate addresses, use a tool such as [[Pywallet]] (which can generate a wallet.dat file) or [[Bitcoin_Address_Utility]] (which can generate a CSV file).  In both cases, you will be generating a list of [[Bitcoin address|Address]]es along with their corresponding [[private_key]]s.  Only the Bitcoin addresses (not the private keys) should be loaded on the web server.

If you are shipping goods manually, you can use the Bitcoin software to check for incoming payments, or alternately consider using [[Block_Explorer]] or [[Abe]] to verify payment when you're about to ship.  To make this easy, make your website provide you a full hyperlink that includes the proper receiving address:  ht<nowiki>tp://www</nowiki>.blockexplorer.com/address/ADDRESSGOESHERE.

If you are delivering digital goods or services and want to be able to deliver instantly upon payment and/or confirmation, you can use a third-party service such as [[Bitcoin_Notify]] to tell your website when a payment has been received.  This sort of service requires no significant API implementation - they will simply make a POST to your website or send you an e-mail when a payment has been received on one of your addresses.

If you keep Bitcoins off your web server, this ensures your wallet cannot be stolen if your web server experiences a security intrusion.  Your risk becomes limited to the possibility that a successful intruder could add his own addresses to your address pool and steal funds from a few incoming orders until you detect the problem, however, this is a relatively controllable risk.

##Using offchain payment networks

[[Off chain|Off-Chain_Transactions]] networks provides various benefits to Bitcoin, such as instant confirmations and protection against double spending. [[ inputs.png]] [Inputs.io](https://inputs.io) is an offchain payment network that charges no fees and has a easy API to integrate, as well as providing frictionless buttons that can be added by copying 2 lines of code. Visitors will be able to pay without leaving the page.

###Using a third-party plugin
You can use an existing [[shopping cart interface|tags/Shopping_Cart_Interfaces]] from a 3rd party to automatically handle all Bitcoin payments on your website.  If you want to develop the system yourself, you can utilize the Bitcoin client's [[JSON-RPC API|API_tutorial_(JSON-RPC)]] to automatically accept payments.

Things to note if you build it yourself:

1. When a customer orders something on your website it records:
1. * Bitcoin address that payment should be sent to
1. * Order details (delivery address etc.)
1. * Customer's refund address (optional - if you wish you can ask for this later, only in cases a refund is required)
1. * Payment amount
1. When payment arrives, checks that they have paid the correct amount or not, and informs you
1. * You dispatch the goods to the customer and mark the order as fulfilled
1. * If you cannot dispatch the goods you mark the order as denied and ask the customer for a refund address (unless you already have it from earlier) to send a refund.
1. Forwards the funds to bitcoin address of your choice

##Common Errors
It has been observed on occasion that a business funnels all its orders through the same Bitcoin address, and asks people to send some BTC, then send email describing the timing and the amount of the transaction to 'claim' it. This is **not** secure, since anyone can see the transaction details using a tool such as [[Block_Explorer]], and then try to claim someone else's transaction as theirs.

Do not do this.  Give each customer a unique Bitcoin address.

##Listing your business on the Bitcoin Trade page

Anyone can add and update a listing on the [[trade|Trade]] page.  Just register if you haven't and add to the appropriate category.  If you'ld like assistance, perhaps someone in the [#bitcoin-marketing](http://webchat.freenode.net/?channels=#bitcoin-marketing) IRC channel would be willing to assist.

##See Also

* [[In-store_Transactions]]
* [[Shopping Cart Interfaces|tags/Shopping_Cart_Interfaces]]
* [[Securing_online_services]]
* [[Bitcoin_Evolution]] handles sales tracking and order forms; requires Bitcoin client for actual payment
* [[Bitcoin_PayFlow]] automates the process for accepting bitcoins
* [[Bitcoin_API_Services]] an easy solution for securely accepting Bitcoins and updating BTC prices
* [[BitcoinNotify]] merchants solution for accepting Bitcoins and updating BTC prices
* [[Coinbase]] Offers payment buttons, checkout pages, shopping cart integration, and daily cash out to USD.
* [[BitMerch]] Provides HTML buttons to start accepting bitcoins instantly. No server side setup required.
* [[Bitcoin Javascript Converter|Converter]] displays a price in BTCs after converting from USDs.
* [[How_to_accept_Bitcoin,_for_small_businesses]]
* [[Marketing|tags/Marketing]]
* [[URI_Scheme]]
* [[Promotional_graphics]], buttons and logos
* [[!img "BIPS.gif" size=20x20 link=https://bips.me]] [[BIPS]] Bitcoin Internet Payment System, Merchant solutions and eWallet for Bitcoin
* [[BitPay]] Merchant solutions for Bitcoin
* [BitPagos](http://www.bitpagos.net) Payments Gateway for Latin America
* [Paysius](http://paysius.com) Allows merchants to easily and securely accept Bitcoin payments on their website
* [[Fasterco.in]] Bitcoin payment processing for merchants and day-traders
* [[Lazy_API]] The lazy (and possibly easiest?) way to accept bitcoin payments on your website
* [Snowcron](http://snowcron.com) Bitcoin Store Engine: Handles payments, sends your customers information they ordered (reg. codes, passwords...) No web programming required.
[[!tag "ECommerce"]]
