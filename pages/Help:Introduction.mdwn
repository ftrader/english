<div class="plainlinks" style="border: 1px solid red; width: 100%; background-color: #fcc; padding: 10px; margin-bottom: 25px;">This page requires copy editing and improvement.</div>
Alice is far away from Bob and wants to buy his [Alpaca socks](http://www.grasshillalpacas.com/alpacaproductsforbitcoinoffer.html). In return, she wants to send him a dollar. She can use something like paypal with its limitations or she can mail him a dollar bill. But a dollar bill is just an item with very low intrinsic value that is accepted by Alice and Bob to represent something significant in the real world like socks. Instead of mailing the bill itself, Alice could have emailed a number, like the serial number imprinted on her dollar bill, and save on stamps and time, we will call this number a [[bitcoin|index]]. The bitcoin is used as a unit of account to measure the value of the socks Bob gave to Alice. Once Bob receives the bitcoin he would like to know that there is a good chance that he will be able to use the bitcoin to buy other products of similar value in the immediate future (means of exchange) or in the long term future (asset) and he needs to know if there are any unwanted side effects to using it.

For the transaction to take place, Alice needs to have a bitcoin to start with and Bob needs to decide if he accepts the bitcoin in return for his socks. The value of a bitcoin is affected:

* The bitcoin can’t be replicated (counterfeited) and used again by Alice or someone else eavesdropping to the transaction.
* Alice can’t create more bitcoins out off thin air without limit
* However, there should be some mechanism that introduces new bitcoins out of thin air into the system, otherwise there would not be enough bitcoins to make it popular by many people. But this mechanism should be agreed by all (fare) and it should be slow otherwise bitcoins cannot be used to store asset.
* Bob needs to know that it will be relatively easy for him to find other people that will accept his bitcoin in the same way that he did, this is a circular problem that requires other people to go through the same decision process 
Bob may consider the following side effects:

* Bob needs to know that it will be hard to steal or confiscate his bitcoin once he received it.
* Like regular cash, Bob will like to know that his privacy is kept, and other people that will receive the bitcoin in the future will not be able to personally track him.

#Counterfeiting
##By an eavesdropper
To guarantee that an eavesdropper, Eve, cannot replicate bitcoins we use a [public key system](Wikipedia:Public-key_cryptography) to make digital signatures. In this system, each person, such as Alice and Bob, has a pair of public and private keys which he/she stores in a safe [[wallet|Wallet]]. Only the user with his secret private key can sign a document, such as the transaction to give some of his bitcoins to somebody else, but any one can validate the signature using the user’s public key. The bitcoins, in Alice's hands, already contain a signature by whoever sent her the amount.

* Bob sends his public key to Alice.
* Alice adds Bob’s public key to the coin’s content.
* Alice signs the transaction with her secret private key.

As a result, the new coin, that Eve may be intercepting, contains the public key of both Alice and Bob.

Later on, when Bob will transfer the same coins to Charley, he will do the same thing: receive from Charley his public key, add a new transaction to the coin's chain of transactions and sign it with his (Bob) private key. But only Bob can do this, because only Bob has the private key which is necessary for signing and which is the only private key to match Bob’s public key that is already in the chain.

Eve cannot change who the coins belong to by replacing Bob’s public key with her public key, because Alice signed the transfer to Bob using her private key, declaring that the coins now belong to Bob, and Alice's private key is kept secret from Eve. So if Charley accepts that the original coin was in the hands of Alice he will also accept the fact that this coin was later passed to Bob and now Bob is passing this same coin to him.

##By the sender
This is how we guarantee that Alice cannot replicate the coin and use it in more than one transaction:

* Details about the [[transaction|Transactions]] are [[sent|Network]] to as many other people's computers as possible
* At least one of the computers sends back a [[block|Blocks]], which is just a large document that includes details of many transactions. The block is sent to as many other people as possible.
* Eventually the block reaches Bob who can validate that his transaction was recorded and no other transaction for the same coin was made in the past.

In theory, Alice could generate a spoofed block in which her past usage of the same coin does not appear and try to send this block to Bob as evidence that the coin is still hers. However, that past transaction, which contains a signature from Alice, has already been announced and has already been distributed to a very large number of computers in the bitcoin network. Since the process of generating a block is designed to take a [[long time|Proof_of_work]] and all transactions must be given in such blocks, Alice will be unable to compete with all these computers in the rate with which she can generate blocks. Bob will receive much more blocks from third persons than Alice alone will ever be able to generate, and some of these blocks will contain Alice's previous transaction, telling Bob that Alice has already spent her coin. And since, in the presence of multiple parallel chains of blocks of transactions, the longest such chain is taken as the truth, the only way for Alice to "pass" her own version of events is to be in a position to command the majority of the CPU power on the network. We assume nobody can do that, therefore Alice cannot undo what she did and cannot spend her coin twice.

#Privacy
In order to protect his [[privacy|Anonymity]], Bob can generate a new public-private key pair for each transaction. So David receiving the coin from Charley will not be able to identify who is the second person in the list of transactions. The only thing David will know is the [[address|Address]] of Bob which is a shortened (hashed) version of his public key.

#Creation of coins
As we saw, both Bob and Charley need to verify that the original coin from Alice is valid. Alice cannot simply generate coins instantly, out of thin air, because the appearance of a coin is a transaction that needs to be accepted by others (it must appear at some place in the chain of blocks). The way that new coins are slowly introduced is this: every computer that manages to generate a block is allowed to put one transaction there in which it gains 50 BTC, without this amount having to come from somewhere. Other computers receiving the block can validate that only one coin is created and they can then accept this new coin as valid. This is called a "proof of work", because generating blocks is a [[slow|Target]] process that requires Alice to spend real resources (buy recent computer hardware, use electricity and CPU time) and in this way it can be compared to gold mining. Only with a proof of work is Alice allowed to contribute to the [[chain of blocks|Block_chain]] that together keep a record of all transactions. The coin received by Alice is an incentive for her to perform this computation work. In addition to this, Alice can shave a small, voluntary [[fee|Transaction_fee]] from the transactions stored in the block.

#Putting it all together
Directly experience the system in action by visting [Bitcoin Block Explorer](http://blockexplorer.com/).
The site shows you the latest blocks in the block chain. The [[block chain|Block_chain]] contains the agreed history of all transactions that took place in the system.
Note how many blocks were generated in the last hour, should be around 6. Also notice the number of transactions and the total amount transfered in the last hour (last time I checked it was about 64 and 15K.)
This should give you an indication of how active the system is.

Next, drill into one of these blocks.
Start by noticing that the block's [[hash|hash]] begins with a run of zeros, this is what made making it so difficult.
The computer that generated this block had to run on many *Nonce* values (also listed on the block's page) until it found one that generated this run of zeros.
Next notice the line titled *Previous block*, each block contains the hash of the block that came before it, this is what forms the chain of blocks.
Now notice all the transactions the block contains. The first transaction is the income earned by the computer that generated this block. It includes a fixed amont of coins created out of thin air and possibly fee collected from other transactions in the same block. Several blocks starting from the same block could have been generated in parallel but at the end all the computers in the network agree that only one of these blocks is accepted to be part of the block chain. Other blocks are rejected either because they didn't play according to the rules of the game or  they missed out on some of the transactions.

Drill into any of the transactions and you will see how it is made from one or more amounts coming in and out.
The fact that there can be more than one incoming and outgoing amounts, allow the system to join and break amounts in any possible way allowing for any fractional amount needed (usually cents.)
Each incoming amount is a transaction from the past (which you can also drill to) coming from an address of someone
and each outgoing amount is addressed to someone and will be part of a future transaction (which you can also drill too if it also had already taken place.)

Finally you can drill into any of the  [[addresses|Address]] and see what public information is available.
